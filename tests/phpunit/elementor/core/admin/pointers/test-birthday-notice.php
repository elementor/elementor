<?php

namespace Elementor\Tests\Phpunit\Elementor\Core\Admin\Pointers;

use Elementor\Core\Admin\Pointers\Notices\Birthday as Birthday_Notice;
use PHPUnit\Framework\TestCase as PHPUnit_TestCase;

class Test_Birthday_Notice extends PHPUnit_TestCase {
	public function setUp(): void {
		parent::setUp(); // TODO: Change the autogenerated stub
	}

	public function tearDown(): void {}

	public function test_should_display_notice__true() {
		echo 'trytrytrytrytrytrytry';

		$birthday_notice = $this->get_notice_class_mock( [
			'is_campaign_time' => true,
		] );

		assert( $birthday_notice->should_display_notice() );
	}

	private function get_notice_class_mock( array $return_value_map ) {
		$mock = $this->getMockBuilder( Birthday_Notice::class )
			->setMethods( array_keys( $return_value_map ) )
			->getMock();

		foreach ( $return_value_map as $method => $return_value ) {
			$mock->method( $method )->willReturn( $return_value );
		}

		return $mock;
	}
}
