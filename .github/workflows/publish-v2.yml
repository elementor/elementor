name: Publish V2
# Required secrets for this workflow: MAINTAIN_USERNAME, MAINTAIN_EMAIL, SLACK_TOKEN, SLACK_CHANNEL_RELEASE

on:
  workflow_dispatch:
    inputs:
      pre_release:
        type: boolean
        description: 'Pre-release?'
        required: false

env:
  CHANGELOG_FILE: '/tmp/temp-changelog.txt'

jobs:
  publish:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: Install Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - name: Parse ref branch name
        uses: ./.github/workflows/parse-branch-name
        with:
          BRANCH_NAME: ${{ github.ref }}
      - name: Download release zip file from RC tag artifact
        uses: robinraju/release-downloader@v1.7
        with:
          tag: v${{ env.CLEAN_PACKAGE_NAME }}
          fileName: ${{ github.event.repository.name }}-${{ env.CLEAN_PACKAGE_NAME }}.zip
          out-file-path: /tmp/
      - name: Download change log file from RC tag artifact
        uses: robinraju/release-downloader@v1.7
        with:
          tag: v${{ env.CLEAN_PACKAGE_NAME }}
          fileName: temp-changelog.txt
          out-file-path: /tmp/
      - name: Get Release Name
        uses : ./.github/workflows/get-release-name
        with:
          BUILD_ZIP_FILE_PATH: /tmp/${{ github.event.repository.name }}-${{ env.CLEAN_PACKAGE_NAME }}.zip
          PLUGIN_NAME: ${{ github.event.repository.name }}
      - name: Read changelog and set current date
        if: env.CHANNEL == 'ga' && github.event.inputs.pre_release == 'false'
        uses : ./.github/workflows/get-changelog-datetime
      - name: Parse Jira Keys from changelog # Only for GA releases
        if: env.CHANNEL == 'ga' && github.event.inputs.pre_release == 'false'
        id: jira_keys
        uses: HighwayThree/jira-extract-issue-keys@8050830121f3eab19553d2f0c0150873a8d1b51b
        with:
          commit-message: '${{ env.CHANGELOG }}'
        env:
          GITHUB_TOKEN: ${{ secrets.MAINTAIN_TOKEN }}
      - name: Push Deployment Info to Jira
        if: env.CHANNEL != 'ga' && steps.jira_keys.outputs.jira-keys != '' && github.repository_owner == 'elementor' && github.event.inputs.pre_release == 'false'
        uses: HighwayThree/jira-upload-deployment-info@7cd4db1e5cc96692fd0b4c688407efd95ae3e610
        with:
          client-id: '${{ secrets.JIRA_CLIENT_ID }}'
          client-secret: '${{ secrets.JIRA_CLIENT_SECRET }}'
          cloud-instance-base-url: '${{ secrets.JIRA_CLOUD_INSTANCE_BASE_URL }}'
          issue-keys: "${{ steps.jira_keys.outputs.jira-keys }}"
          display-name: "${{ env.PACKAGE_VERSION }}"
          url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
          description: "This PR was merged to the following release(s)"
          last-updated: '${{ env.NOW }}'
          state: 'successful'
          pipeline-id: '${{ github.repository }} ${{ github.workflow }}'
          pipeline-url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
          environment-id: "${{ env.PACKAGE_VERSION }}"
          environment-display-name: "${{ env.PACKAGE_VERSION }}"
          environment-type: 'production'
      - name: Unzip Release zip file
        run: |
          unzip -q /tmp/${{ github.event.repository.name }}-${{ env.CLEAN_PACKAGE_NAME }}.zip -d $GITHUB_WORKSPACE
      - name: Update Readme.txt
        if: env.CHANNEL != 'cloud'
        uses: ./.github/workflows/update-readme-txt
        with:
          CHANNEL: ${{ env.CHANNEL }}
          PACKAGE_VERSION: ${{ env.PACKAGE_VERSION }}
      - name: Upload Debug Build To GitHub Artifacts
        if: env.CHANNEL != 'cloud'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.CHANNEL }}-svn-preview
          path: elementor
          retention-days: 7
      - name: Archive Release folder with updated Readme.txt for GitHub release
        run: |
          cd $GITHUB_WORKSPACE
          zip -r /tmp/${{ github.event.repository.name }}-${{ env.RELEASE_FILENAME }}.zip elementor
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_NAME }}
          files: /tmp/${{ github.event.repository.name }}-${{ env.RELEASE_FILENAME }}.zip
          body_path: ${{ env.CHANGELOG_FILE }}
          prerelease: ${{ github.event.inputs.pre_release }}
      - name: Publish to WordPress.org SVN
        if: env.CHANNEL != 'cloud' && github.repository_owner == 'elementor' && github.event.inputs.pre_release == 'false' # We don't publish cloud to WordPress.org, ga, beta, dev are published.
        env:
          PLUGIN_VERSION: ${{ env.RELEASE_NAME }}
          SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
          SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
          CHANNEL: ${{ env.CHANNEL }}
          PACKAGE_VERSION : ${{ env.PACKAGE_VERSION }}
        run: |
          bash "${GITHUB_WORKSPACE}/.github/scripts/validate-build-files.sh"
          bash "${GITHUB_WORKSPACE}/.github/scripts/publish-to-wordpress-org.sh"
      - name: Release Dev From Beta
        if: env.CHANNEL == 'beta' # Only for beta releases
        uses: ./.github/workflows/release-dev-from-beta
        with:
          BUILD_ZIP_FILE_PATH: /tmp/${{ github.event.repository.name }}-${{ env.RELEASE_FILENAME }}.zip
          PLUGIN_NAME: ${{ github.event.repository.name }}
          REPOSITORY_OWNER: ${{ github.repository_owner }}
          SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
          SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
          PRE_RELEASE: ${{ github.event.inputs.pre_release }}
          PACKAGE_VERSION : ${{ env.PACKAGE_VERSION }}
      - name: Post To Slack Created Release
        if: github.event.inputs.pre_release == 'false'
        uses : ./.github/workflows/post-to-slack
        with:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
          SLACK_TAG_CHANNELS: ${{ secrets.SLACK_CHANNEL_RELEASE }}
          PAYLOAD: |
                  {
                    "blocks": [
                      {
                        "type": "section",
                        "text": {
                          "type": "mrkdwn",
                          "text": "Hi All :smile:\n\nWe just released *Elementor*\n`${{ env.RELEASE_NAME }}`"
                        }
                      },
                      {
                        "type": "divider"
                      },
                      {
                        "type": "section",
                        "text": {
                          "type": "mrkdwn",
                          "text": "GitHub Release *${{ env.RELEASE_NAME }}* \nCreated by ${{ github.actor }}"
                        },
                        "accessory": {
                          "type": "button",
                          "text": {
                            "type": "plain_text",
                            "text": "Open :point_left:",
                            "emoji": true
                          },
                          "value": "open-release",
                          "url": "https://github.com/${{ github.repository }}/releases/tag/${{ env.RELEASE_NAME }}",
                          "action_id": "button-action"
                        }
                      }
                    ]
                  }
