name: Cherry Pick Merged PR

on:
  pull_request:
    types:
      - closed

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  cherry-pick:
    if: ${{ github.event.pull_request.state == 'closed' }}
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      id-token: write

    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Get branch labels
        id: get_labels
        run: |
          LABELS=$(jq -r '.[].name' <<< '${{ toJSON(github.event.pull_request.labels) }}' | grep '^cp_' | paste -sd ',' || echo "")
          echo "filtered_labels_csv=$LABELS" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: Fetch all branches
        run: git fetch --all
        shell: bash

      - name: Cherry-Pick and Create PRs
        if: ${{ steps.get_labels.outputs.filtered_labels_csv != '' }}
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          MERGE_SHA="${{ github.event.pull_request.merge_commit_sha }}"
          ORIG_TITLE="${{ github.event.pull_request.title }}"
          ORIG_URL="${{ github.event.pull_request.html_url }}"

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          IFS=',' read -ra BRANCHES <<< "${{ steps.get_labels.outputs.filtered_labels_csv }}"
          for lbl in "${BRANCHES[@]}"; do
            TARGET=${lbl#cp_}
            BRANCH="cherry-pick-pr-${PR_NUMBER}-${TARGET}"

            # Create branch
            if ! git checkout -b "$BRANCH" "origin/$TARGET"; then
              echo "::warning:: Branch $TARGET does not exist - skipping"
              continue
            fi

            # Cherry-pick
            if ! git cherry-pick -m 1 "$MERGE_SHA"; then
              echo "::error:: Cherry-pick conflicts detected for PR #${PR_NUMBER} on branch ${TARGET}"
              git cherry-pick --abort
              echo "Cherry-pick aborted due to conflicts. Manual resolution required."
              continue
            else
              echo "Cherry-pick successful"
            fi

            # Push
            if ! git push origin "$BRANCH"; then
              echo "::warning:: Failed to push branch $BRANCH"
              continue
            fi

            # Create PR via gh CLI (token already in env: GH_TOKEN)
            gh pr create \
              --base "$TARGET" \
              --head "$BRANCH" \
              --title "Cherry-pick PR #${PR_NUMBER} â†’ ${TARGET}: ${ORIG_TITLE}" \
              --body "Automatic cherry-pick of [#${PR_NUMBER}](${ORIG_URL}) to \`${TARGET}\` branch."
          done
        shell: bash
