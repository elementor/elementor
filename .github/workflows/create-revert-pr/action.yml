name: Create Revert PR
description: Creates a revert PR when tests fail on push events to main or version branches

inputs:
  GITHUB_TOKEN:
    required: true
    description: 'GitHub token for API access'
  COMMIT_SHA:
    required: true
    description: 'The commit SHA that caused the test failure'
  BRANCH_NAME:
    required: true
    description: 'The branch where the failing commit was pushed'
  WORKFLOW_NAME:
    required: true
    description: 'The name of the workflow that failed (e.g., "Playwright")'
  WORKFLOW_RUN_URL:
    required: true
    description: 'URL to the failed workflow run'

runs:
  using: "composite"
  steps:
    - name: Create revert PR
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      run: |
        set -e
        
        # Get commit information
        COMMIT_SHA="${{ inputs.COMMIT_SHA }}"
        PARENT_SHA=$(git rev-parse "${COMMIT_SHA}^")
        COMMIT_MESSAGE=$(git log --format=%B -n 1 "${COMMIT_SHA}")
        COMMIT_AUTHOR=$(git log --format='%an' -n 1 "${COMMIT_SHA}")
        BRANCH_NAME="${{ inputs.BRANCH_NAME }}"
        WORKFLOW_NAME="${{ inputs.WORKFLOW_NAME }}"
        
        # Create revert branch name
        REVERT_BRANCH="revert-${COMMIT_SHA:0:7}-$(date +%s)"
        
        # Check if a revert PR already exists for this commit
        EXISTING_PR=$(gh pr list --state open --search "revert ${COMMIT_SHA:0:7}" --json number --jq '.[0].number // empty')
        
        if [ -n "$EXISTING_PR" ]; then
          echo "Revert PR already exists: #$EXISTING_PR"
          exit 0
        fi
        
        # Configure git
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # Create and checkout revert branch from parent commit
        git checkout -b "${REVERT_BRANCH}" "${PARENT_SHA}"
        
        # Push the revert branch
        git push origin "${REVERT_BRANCH}"
        
        # Create PR with revert
        PR_TITLE="Revert \"$(echo "${COMMIT_MESSAGE}" | head -n1)\""
        PR_BODY="This PR automatically reverts commit ${COMMIT_SHA} due to ${WORKFLOW_NAME} test failures.

        **Original commit:** ${COMMIT_SHA}
        **Original author:** ${COMMIT_AUTHOR}
        **Branch:** ${BRANCH_NAME}
        **Failed workflow:** ${{ inputs.WORKFLOW_RUN_URL }}

        **Original commit message:**
        \`\`\`
        ${COMMIT_MESSAGE}
        \`\`\`

        This revert was created automatically because the ${WORKFLOW_NAME} tests failed after the original commit was pushed to ${BRANCH_NAME}.
        
        The 'run-tests' label has been added to trigger tests on this revert PR."
        
        # Create the PR
        PR_NUMBER=$(gh pr create \
          --title "${PR_TITLE}" \
          --body "${PR_BODY}" \
          --base "${BRANCH_NAME}" \
          --head "${REVERT_BRANCH}" \
          --json number \
          --jq '.number')
        
        echo "Created revert PR #${PR_NUMBER}"
        
        # Add the 'run-tests' label
        gh pr edit "${PR_NUMBER}" --add-label "run-tests"
        
        echo "Added 'run-tests' label to PR #${PR_NUMBER}"
        echo "::notice::Created revert PR #${PR_NUMBER} for commit ${COMMIT_SHA}" 